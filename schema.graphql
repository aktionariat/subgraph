type Registry @entity {
  " registry address"
  id: ID!
  " amount of pools created"
  marketCount: BigInt!
  " amoutn of transactions all time"
  txCount: BigInt!
  " total volume all time in USD"
  totalVolumeUSD: BigDecimal!
  " total volume all time in XCHF"
  totalVolumeXCHF: BigDecimal!
  " TVL in USD"
  totalValueLockedUSD: BigDecimal!
  " TVL in XCHF"
  totalValueLockedXCHF: BigDecimal!
  " raised"
  totalRaisedXCHF: BigDecimal!
  totalRaisedUSD: BigDecimal!
  " liquidity in base/stable coins"
  liquidityXCHF: BigDecimal!
  liquidityUSD: BigDecimal!

  " current owner of the registry"
  owner: ID!

  " block number of the last update"
  lastUpdate: BigInt!

}

type Token @entity {
  " token address"
  id: ID!
  " token symbol"
  symbol: String!
  " token name"
  name: String!
  " token decimals"
  decimals: BigInt!
  " token total supply"
  totalSupply: BigInt!
  " total shares "
  totalShares: BigInt
  " volume in token units"
  tradeVolume: BigDecimal!
  " volume in derived XCHF"
  tradeVolumeXCHF: BigDecimal!
  " volume in derived USD"
  tradeVolumeUSD: BigDecimal!
  " transactions count"
  txCount: BigInt!
  " tvl in token units"
  totalValueLocked: BigDecimal!
  " tvl in derived XCHF"
  totalValueLockedXCHF: BigDecimal!
  " tvl in derived USD"
  totalValueLockedUSD: BigDecimal!
  " liquidity in terms of USD"
  liquidityUSD: BigDecimal!
  " liquidity in terms of XCHF"
  liquidityXCHF: BigDecimal!
  " total raised in XCHF"
  totalRaisedXCHF: BigDecimal!
  " total raised in USD"
  totalRaisedUSD: BigDecimal!
  " derived price in XCHF"
  derivedXCHF: BigDecimal!
  " derived price in usd "
  derivedUSD: BigDecimal!
  " market cap in XCHF "
  marketCap: BigDecimal
  " first trade price in XCHF "
  firstTradePriceXCHF: BigDecimal!
}

type Brokerbot @entity {
  " brokerbot address"
  id: ID!

  " mirrored from the smart contract"
  base: Token!
  token: Token!
  reserveBase: BigDecimal!
  reserveToken: BigDecimal!
  totalSupply: BigDecimal!
  
  " calculated total vaule locked"
  totalValueLockedXCHF: BigDecimal!
  totalValueLockedUSD: BigDecimal!

  " base liquidity"
  liquidityXCHF: BigDecimal!
  liquidityUSD: BigDecimal!

  " Price in terms of the asset market"
  basePrice: BigDecimal!
  tokenPrice: BigDecimal!

  " USD price of token "
  priceUSD: BigDecimal!
  " XCHF price of token "
  priceXCHF: BigDecimal!

  " lifetime volume stats"
  volumeBase: BigDecimal!
  volumeToken: BigDecimal!
  volumeUSD: BigDecimal!
  volumeXCHF: BigDecimal!
  txCount: BigInt!

  " raised"
  totalRaisedXCHF: BigDecimal!
  totalRaisedUSD: BigDecimal!
}

type Transaction @entity {
  " txn hash"
  id: ID!
  " block txn was included in"
  blockNumber: BigInt!
  " timestamp txn was confirmed"
  timestamp: BigInt!
  " gas used during txn execution"
  gasUsed: BigInt!
  gasPrice: BigInt!
  " derived values"
  swap: Swap!
}

type Swap @entity {
  " transaction hash + ''''''' + index in swaps Transaction array"
  id: ID!
  " pointer to transaction"
  transaction: Transaction!
  " timestamp of transaction"
  timestamp: BigInt!
  " pool swap occured within"
  brokerbot: Brokerbot!
  " allow indexing by tokens"
  base: Token!
  " allow indexing by tokens"
  token: Token!
  " sender of the swap"
  sender: Bytes!
  " is a buy"
  isBuy: Boolean!
  " delta of base swapped"
  amountBase: BigDecimal!
  " delta of tokenToken swapped"
  amountToken: BigDecimal!
  " derived info"
  amountUSD: BigDecimal!
  " derived info"
  amountXCHF: BigDecimal!
  " The price of the market after the swap"
  newPriceBase: BigDecimal!
  " The average paid price"
  avgPriceBase: BigDecimal!
  " The price of the market after the swap in USD"
  newPriceUSD: BigDecimal!
  " The average paid price in USD"
  avgPriceUSD: BigDecimal!
  " The price of the market after the swap in XCHF"
  newPriceXCHF: BigDecimal!
  " The average paid price in XCHF"
  avgPriceXCHF: BigDecimal!
  " index within the txn"
  logIndex: BigInt
}

" Data accumulated and condensed into weekly stats for all of Aktionariat"
type AktionariatWeekData @entity {
  " timestamp rounded to current day by dividing by 604800"
  id: ID!
  " timestamp rounded to current day by dividing by 604800"
  date: Int!
  " total weekly volume over aktionariat derived in terms of XCHF"
  volumeXCHF: BigDecimal!
  " total weekly volume over aktionariat derived in terms of USD"
  volumeUSD: BigDecimal!
  " number of weekly transactions"
  txCount: BigInt!
  " tvl in terms of USD"
  totalValueLockedUSD: BigDecimal!
  " tvl in terms of XCHF"
  totalValueLockedXCHF: BigDecimal!
  " total raised in terms of USD"
  totalRaisedUSD: BigDecimal!
  " total raised in terms of XCHF"
  totalRaisedXCHF: BigDecimal!
  " liquidity in terms of USD"
  liquidityUSD: BigDecimal!
  " liquidity in terms of XCHF"
  liquidityXCHF: BigDecimal!
}

" Data accumulated and condensed into day stats for all of Aktionariat"
type AktionariatDayData @entity {
  " timestamp rounded to current day by dividing by 86400"
  id: ID!
  " timestamp rounded to current day by dividing by 86400"
  date: Int!
  " total daily volume over aktionariat derived in terms of XCHF"
  volumeXCHF: BigDecimal!
  " total daily volume over aktionariat derived in terms of USD"
  volumeUSD: BigDecimal!
  " number of daily transactions"
  txCount: BigInt!
  " tvl in terms of USD"
  totalValueLockedUSD: BigDecimal!
  " tvl in terms of XCHF"
  totalValueLockedXCHF: BigDecimal!
  " total raised in terms of USD"
  totalRaisedUSD: BigDecimal!
  " total raised in terms of XCHF"
  totalRaisedXCHF: BigDecimal!
  " liquidity in terms of USD"
  liquidityUSD: BigDecimal!
  " liquidity in terms of XCHF"
  liquidityXCHF: BigDecimal!
}

" Data accumulated and condensed into weekly stats for each brokerbot"
type BrokerbotWeekData @entity {
  " timestamp rounded to current day by dividing by 604800"
  id: ID!
  " timestamp rounded to current day by dividing by 604800"
  date: Int!
  " pointer to brokerbot"
  brokerbot: Brokerbot!
  " current usd price"
  priceUSD: BigDecimal!
  " current xchf price"
  priceXCHF: BigDecimal!
  " price of base"
  basePrice: BigDecimal!
  " price of token"
  tokenPrice: BigDecimal!
  " tvl derived in USD at end of period"
  totalValueLockedUSD: BigDecimal!
  " tvl derived in XCHF at end of period "
  totalValueLockedXCHF: BigDecimal!
  " liquidity in terms of USD"
  liquidityUSD: BigDecimal!
  " liquidity in terms of XCHF"
  liquidityXCHF: BigDecimal!
  " volume in base "
  volumeBase: BigDecimal!
  " volume in token "
  volumeToken: BigDecimal!
  " volume in USD "
  volumeUSD: BigDecimal!
    " volume XCHF "
  volumeXCHF: BigDecimal!
  " number of transactions during period "
  txCount: BigInt!
  " opening price of token "
  open: BigDecimal!
  " high price of token "
  high: BigDecimal!
  " low price of token "
  low: BigDecimal!
  " close price of token "
  close: BigDecimal!
}

" Data accumulated and condensed into day stats for each brokerbot"
type BrokerbotDayData @entity {
  " timestamp rounded to current day by dividing by 86400"
  id: ID!
  " timestamp rounded to current day by dividing by 86400"
  date: Int!
  " pointer to brokerbot"
  brokerbot: Brokerbot!
  " current usd price"
  priceUSD: BigDecimal!
  " current xchf price"
  priceXCHF: BigDecimal!
  " price of base"
  basePrice: BigDecimal!
  " price of token"
  tokenPrice: BigDecimal!
  " tvl derived in USD at end of period"
  totalValueLockedUSD: BigDecimal!
  " tvl derived in XCHF at end of period "
  totalValueLockedXCHF: BigDecimal!
  " liquidity in terms of USD"
  liquidityUSD: BigDecimal!
  " liquidity in terms of XCHF"
  liquidityXCHF: BigDecimal!
  " volume in base "
  volumeBase: BigDecimal!
  " volume in token "
  volumeToken: BigDecimal!
  " volume in USD "
  volumeUSD: BigDecimal!
    " volume XCHF "
  volumeXCHF: BigDecimal!
  " number of transactions during period "
  txCount: BigInt!
  " opening price of token "
  open: BigDecimal!
  " high price of token "
  high: BigDecimal!
  " low price of token "
  low: BigDecimal!
  " close price of token "
  close: BigDecimal!
}

" hourly stats tracker for pool "
type BrokerbotHourData @entity {
  " format: <brokerbot address>-<timestamp> "
  id: ID!
  " unix timestamp for start of hour "
  periodStartUnix: Int!
  " pointer to brokerbot "
  brokerbot: Brokerbot!
  " current usd price tracker at end of period "
  priceUSD: BigDecimal!
  " current xchf price tracker at end of period "
  priceXCHF: BigDecimal!
  " price of base "
  basePrice: BigDecimal!
  " price of token "
  tokenPrice: BigDecimal!
  " tvl derived in USD at end of period "
  totalValueLockedUSD: BigDecimal!
  " tvl derived in XCHF at end of period "
  totalValueLockedXCHF: BigDecimal!
  " liquidity in terms of USD"
  liquidityUSD: BigDecimal!
  " liquidity in terms of XCHF"
  liquidityXCHF: BigDecimal!
  " volume in base "
  volumeBase: BigDecimal!
  " volume in token "
  volumeToken: BigDecimal!
  " volume in USD "
  volumeUSD: BigDecimal!
    " volume XCHF "
  volumeXCHF: BigDecimal!
  " number of transactions during period "
  txCount: BigInt!
  " opening price of token "
  open: BigDecimal!
  " high price of token "
  high: BigDecimal!
  " low price of token "
  low: BigDecimal!
  " close price of token "
  close: BigDecimal!
}

type TokenWeekData @entity {
  " token address concatendated with date "
  id: ID!
  " timestamp rounded to current day by dividing by 604800 "
  date: Int!
  " pointer to token "
  token: Token!
  " volume in token units "
  volume: BigDecimal!
  " volume USD "
  volumeUSD: BigDecimal!
  " volume XCHF "
  volumeXCHF: BigDecimal!
  " tvl across all brokerbots in token units "
  totalValueLocked: BigDecimal!
  " tvl across all brokerbots in XCHF "
  totalValueLockedXCHF: BigDecimal!
  " tvl across all brokerbots in USD "
  totalValueLockedUSD: BigDecimal!
  " liquidity in terms of USD"
  liquidityUSD: BigDecimal!
  " liquidity in terms of XCHF"
  liquidityXCHF: BigDecimal!
  " raised in XCHF"
  raisedXCHF: BigDecimal!
  " raised in USD"
  raisedUSD: BigDecimal!
  " price at end of period in XCHF "
  priceXCHF: BigDecimal!
  " price at end of period in USD "
  priceUSD: BigDecimal!
  " opening price xchf "
  open: BigDecimal!
  " high price xchf "
  high: BigDecimal!
  " low price xchf "
  low: BigDecimal!
  " close price xchf "
  close: BigDecimal!
}

type TokenDayData @entity {
  " token address concatendated with date "
  id: ID!
  " timestamp rounded to current day by dividing by 86400 "
  date: Int!
  " pointer to token "
  token: Token!
  " volume in token units "
  volume: BigDecimal!
  " volume USD "
  volumeUSD: BigDecimal!
  " volume XCHF "
  volumeXCHF: BigDecimal!
  " tvl across all brokerbots in token units "
  totalValueLocked: BigDecimal!
  " tvl across all brokerbots in XCHF "
  totalValueLockedXCHF: BigDecimal!
  " tvl across all brokerbots in USD "
  totalValueLockedUSD: BigDecimal!
  " liquidity in terms of USD"
  liquidityUSD: BigDecimal!
  " liquidity in terms of XCHF"
  liquidityXCHF: BigDecimal!
  " raised in XCHF"
  raisedXCHF: BigDecimal!
  " raised in USD"
  raisedUSD: BigDecimal!
  " price at end of period in XCHF "
  priceXCHF: BigDecimal!
  " price at end of period in USD "
  priceUSD: BigDecimal!
  " opening price xchf "
  open: BigDecimal!
  " high price xchf "
  high: BigDecimal!
  " low price xchf "
  low: BigDecimal!
  " close price xchf "
  close: BigDecimal!
}

type TokenHourData @entity {
  " token address concatendated with date "
  id: ID!
  " unix timestamp for start of hour "
  periodStartUnix: Int!
  " pointer to token "
  token: Token!
  " volume in token units "
  volume: BigDecimal!
  " volume USD "
  volumeUSD: BigDecimal!
  " volume XCHF "
  volumeXCHF: BigDecimal!
  " tvl across all pools in token units "
  totalValueLocked: BigDecimal!
  " tvl across all pools in XCHF "
  totalValueLockedXCHF: BigDecimal!
  " tvl across all pools in  USD "
  totalValueLockedUSD: BigDecimal!
  " liquidity in terms of USD"
  liquidityUSD: BigDecimal!
  " liquidity in terms of XCHF"
  liquidityXCHF: BigDecimal!
  " raised in XCHF"
  raisedXCHF: BigDecimal!
  " raised in USD"
  raisedUSD: BigDecimal!
  " price at end of period in XCHF "
  priceXCHF: BigDecimal!
  " price at end of period in USD "
  priceUSD: BigDecimal!
  " opening price xchf "
  open: BigDecimal!
  " high price xchf "
  high: BigDecimal!
  " low price xchf "
  low: BigDecimal!
  " close price xchf "
  close: BigDecimal!
}